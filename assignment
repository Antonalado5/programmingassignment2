## This function will create a special matrix to set and get the value of a matrix as well as set and get the value of the inverse
makeCacheMatrix <- function(x = MATRIX()) {

##init Inverse as null
  Inverse <- NULL

##set function for assigning the input matrix
  set <- function(mat) {
    x <<- mat
    Inverse <<- NULL
  }

  get <- function() matrix
  setinver <- function(inver) Inverse <<- inver
  getinver <- function() Inverse
  list(set = set, 
       get = get,
       setinv = setinv,
       getinv = getinv)
}


## This computes the inverse of the matrix

cacheSolve <- function(x, ...) {

  Inverse <- x$getinv()
  
  if(!is.null(Inverse)) {
    message("calculating inverse")
    return(Inverse)
  }

  output <- x$get()

  Inverse <- solve(output, ...)

  x$setinv(Inverse)


  Inverse
}
